ans <- ans %>% gather(key,value,-id) %>%
extract (key,c("var","group"),"(.)(.)") %>%
spread(var,value)
ans$group <- factor(ans$group)
library(tidyr)
library(dplyr)
library(ggplot2)
ans <- anscombe
ans$id <- as.numeric(rownames(anscombe))
ans <- ans %>% gather(key,value,-id) %>%
extract (key,c("var","group"),"(.)(.)") %>%
spread(var,value)
ans$group <- factor(ans$group)
ans <- ans %>% arrange(group)
g <- ggplot(ans,aes(x,y))
g + geom_point() + facet_wrap(~group) +
coord_fixed(ratio = 1.3) +
ggtitle("Anscombe's Quartet") + theme_bw(16)
install.packages("tidyr")
library(tidyr)
library(dplyr)
library(ggplot2)
ans <- anscombe
ans$id <- as.numeric(rownames(anscombe))
ans <- ans %>% gather(key,value,-id) %>%
extract (key,c("var","group"),"(.)(.)") %>%
spread(var,value)
ans$group <- factor(ans$group)
ans <- ans %>% arrange(group)
g <- ggplot(ans,aes(x,y))
g + geom_point() + facet_wrap(~group) +
coord_fixed(ratio = 1.3) +
ggtitle("Anscombe's Quartet") + theme_bw(16)
ans <- anscombe
ans$id <- as.numeric(rownames(anscombe))
View(ans)
ans <- ans %>% gather(key,value,-id)
?gather
%>% extract (key,c("var","group"),"(.)(.)") %>%
library(tidyr)
library(dplyr)
library(ggplot2)
ans <- anscombe
ans$id <- as.numeric(rownames(anscombe))
ans <- ans %>% gather(key,value,-id) %>%
extract (key,c("var","group"),"(.)(.)") %>%
spread(var,value)
ans
ans$group <- factor(ans$group)
ans <- ans %>% arrange(group)
ans
ans <- ans %>% gather(key,value,-id) %>%
extract (key,c("var","group"),"(.)(.)")
?extract
library(dplyr)
df <- data.frame(x = c(NA, "a-b", "a-d", "b-c", "d-e"))
df
df %>% extract(x, "A")
df %>% extract(x, c("A", "B"), "([[:alnum:]]+)-([[:alnum:]]+)")
df %>% extract(x, c("A", "B"), "(.)-(.)")
df %>% extract(x, c("A", "B"), "([a-d]+)-([a-d]+)")
spread(var,value)
?spread
library(dplyr)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
stocksm %>% spread(stock, price)
ans$id <- as.numeric(rownames(anscombe))
ans <- ans %>% gather(key,value,-id) %>%
extract (key,c("var","group"),"(.)(.)")
ans
library(tidyr)
library(dplyr)
library(ggplot2)
ans <- anscombe
ans$id <- as.numeric(rownames(anscombe))
ans <- ans %>% gather(key,value,-id) %>%
extract (key,c("var","group"),"(.)(.)")
ans
ans<-ans%>%spread(var,value)
ans
library(tidyr)
library(dplyr)
library(ggplot2)
ans <- anscombe
ans$id <- as.numeric(rownames(anscombe))
ans <- ans %>% gather(key,value,-id) %>%
extract (key,c("var","group"),"(.)(.)") %>%
spread(var,value)
ans$group <- factor(ans$group)
ans <- ans %>% arrange(group)
g <- ggplot(ans,aes(x,y))
g + geom_point() + facet_wrap(~group) +
coord_fixed(ratio = 1.3) +
ggtitle("Anscombe's Quartet") + theme_bw(16)
d%>%
group_by(type) %>%
summarize(mean(x), sd(x), mean(y), sd(y), cor(x,y))
p <- ggplot(d, aes(x, y)) + geom_point()
p <- p + geom_smooth(method = lm, se = FALSE)
p <- p + facet_wrap(~type)
p
library(tidyr)
library(dplyr)
library(ggplot2)
library(reshape2)
anscombe
d%>%
group_by(type) %>%
summarize(mean(x), sd(x), mean(y), sd(y), cor(x,y))
p <- ggplot(d, aes(x, y)) + geom_point()
p <- p + geom_smooth(method = lm, se = FALSE)
p <- p + facet_wrap(~type)
p
anscombe
summary(anscombe)
str(anscombe)
apply(anscombe,2,mean)
# 改变数据结构
#方法一
d1=NULL
d2=NULL
d1$x<-anscombe[,1]
d1$y<-anscombe[,5]
d1$type<-"a"
d1<-as.data.frame(d1)
d2$x<-anscombe[,2]
d2$y<-anscombe[,6]
d2$type<-"b"
d2<-as.data.frame(d2)
#....
d<-rbind(d1,d2)
#方法二
d1<-data_frame(
x<-anscombe[,1],
y<-anscombe[,5],
type<-"a"
)
d2<-data_frame(
x<-anscombe[,2],
y<-anscombe[,6],
type<-"b"
)
d3<-data_frame(
x<-anscombe[,3],
y<-anscombe[,7],
type<-"c"
)
d4<-data_frame(
x<-anscombe[,4],
y<-anscombe[,8],
type<-"d"
)
d<-rbind(d1,d2,d3,d4)
#方法三
t<-c("a","b","c","d")
for (i in 1:4){
d<-paste("d",i,sep="")
data=data_frame(
x=anscombe[,i],
y=anscombe[,i+4],
type=t[i]
)
assign(d,data)
}
d<-rbind(d1,d2,d3,d4)
d%>%
group_by(type) %>%
summarize(mean(x), sd(x), mean(y), sd(y), cor(x,y))
p <- ggplot(d, aes(x, y)) + geom_point()
p <- p + geom_smooth(method = lm, se = FALSE)
p <- p + facet_wrap(~type)
p
setA=select(anscombe, x=x1,y=y1)
setB=select(anscombe, x=x2,y=y2)
setC=select(anscombe, x=x3,y=y3)
set1=select(anscombe, x=x1,y=y1)
set2=select(anscombe, x=x2,y=y2)
set3=select(anscombe, x=x3,y=y3)
set4=select(anscombe, x=x4,y=y4)
set1$group =1
set2$group =2
set3$group =3
set4$group =4
d=rbind(set1,set2,set3,set4)
d
d1<-data_frame(
x<-anscombe[,1],
y<-anscombe[,5],
type<-"a"
)
d2<-data_frame(
x<-anscombe[,2],
y<-anscombe[,6],
type<-"b"
)
d3<-data_frame(
x<-anscombe[,3],
y<-anscombe[,7],
type<-"c"
)
d4<-data_frame(
x<-anscombe[,4],
y<-anscombe[,8],
type<-"d"
)
d<-rbind(d1,d2,d3,d4)
d<-rbind(d1,d2,d3,d4)
d
#....
d<-rbind(d1,d2)
#方法二
d1<-data_frame(
x<-anscombe[,1],
y<-anscombe[,5],
type<-"a"
)
d2<-data_frame(
x<-anscombe[,2],
y<-anscombe[,6],
type<-"b"
)
d3<-data_frame(
x<-anscombe[,3],
y<-anscombe[,7],
type<-"c"
)
d4<-data_frame(
x<-anscombe[,4],
y<-anscombe[,8],
type<-"d"
)
d<-rbind(d1,d2,d3,d4)
d1<-data_frame(
x<-anscombe[,1],
y<-anscombe[,5],
type<-"a"
)
d2<-data_frame(
x<-anscombe[,2],
y<-anscombe[,6],
type<-"b"
)
d3<-data_frame(
x<-anscombe[,3],
y<-anscombe[,7],
type<-"c"
)
d4<-data_frame(
x<-anscombe[,4],
y<-anscombe[,8],
type<-"d"
)
d<-rbind(d1,d2,d3,d4)
d
d1
d2
d3
d4
d<-rbind(d1,d2)
#方法一
d1=NULL
d2=NULL
d1$x<-anscombe[,1]
d1$y<-anscombe[,5]
d1$type<-"a"
d1<-as.data.frame(d1)
d2$x<-anscombe[,2]
d2$y<-anscombe[,6]
d2$type<-"b"
d2<-as.data.frame(d2)
#....
d<-rbind(d1,d2)
d1<-data_frame(
x<-anscombe[,1],
y<-anscombe[,5],
type<-"a"
)
d<-rbind(d1,d2)
d1<-data_frame(
x<-anscombe[,1],
y<-anscombe[,5],
type<-"a"
)
d2<-data_frame(
x<-anscombe[,2],
y<-anscombe[,6],
type<-"b"
)
d3<-data_frame(
x<-anscombe[,3],
y<-anscombe[,7],
type<-"c"
)
d4<-data_frame(
x<-anscombe[,4],
y<-anscombe[,8],
type<-"d"
)
d<-rbind(d1,d2,d3,d4)
library(tidyr)
library(dplyr)
library(ggplot2)
library(reshape2)
anscombe
summary(anscombe)
str(anscombe)
apply(anscombe,2,mean)
d1<-data_frame(
x<-anscombe[,1],
y<-anscombe[,5],
type<-"a"
)
d2<-data_frame(
x<-anscombe[,2],
y<-anscombe[,6],
type<-"b"
)
d3<-data_frame(
x<-anscombe[,3],
y<-anscombe[,7],
type<-"c"
)
d4<-data_frame(
x<-anscombe[,4],
y<-anscombe[,8],
type<-"d"
)
d<-rbind(d1,d2,d3,d4)
d1<-data.frame(
x<-anscombe[,1],
y<-anscombe[,5],
type<-"a"
)
d2<-data.frame(
x<-anscombe[,2],
y<-anscombe[,6],
type<-"b"
)
d3<-data.frame(
x<-anscombe[,3],
y<-anscombe[,7],
type<-"c"
)
d4<-data.frame(
x<-anscombe[,4],
y<-anscombe[,8],
type<-"d"
)
d<-rbind(d1,d2,d3,d4)
d1<-data.frame(
x=anscombe[,1],
y=anscombe[,5],
type<-"a"
)
d2<-data.frame(
x=anscombe[,2],
y=anscombe[,6],
type<-"b"
)
d3<-data.frame(
x=anscombe[,3],
y=anscombe[,7],
type<-"c"
)
d4<-data.frame(
x=anscombe[,4],
y=anscombe[,8],
type<-"d"
)
d<-rbind(d1,d2,d3,d4)
d1<-data.frame(
x=anscombe[,1],
y=anscombe[,5],
type="a"
)
d2<-data.frame(
x=anscombe[,2],
y=anscombe[,6],
type="b"
)
d3<-data.frame(
x=anscombe[,3],
y=anscombe[,7],
type="c"
)
d4<-data.frame(
x=anscombe[,4],
y=anscombe[,8],
type="d"
)
d<-rbind(d1,d2,d3,d4)
d
d1=select(anscombe, x=x1,y=y1)
d2=select(anscombe, x=x2,y=y2)
d3=select(anscombe, x=x3,y=y3)
d4=select(anscombe, x=x4,y=y4)
d1$group ='a'
d2$group ='b'
d3$group ='c'
d4$group ='d'
d<-rbind(d1,d2,d3,d4)
d
?reshape
?meld
melt
?melt
paste0('x',1:4)
reshape(anscombe,measure.vars=c(paste0('x',1:4),paste0('y',1:4)))
c(paste0('x',1:4),paste0('y',1:4))
melt(anscombe,measure.vars=c(paste0('x',1:4),paste0('y',1:4)))
?cast
names(airquality) <- tolower(names(airquality))
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
aqm
acast(aqm, day ~ month ~ variable)
acast(aqm, month ~ variable, mean)
acast(aqm, month ~ variable, mean, margins = TRUE)
dcast(aqm, month ~ variable, mean, margins = c("month", "variable"))
library(reshape2)
raw <- read.csv("data/pew.csv", check.names = F)
raw
View(raw)
v
tidy <- melt(raw, id = "religion")
View(tidy)
names(tidy) <- c("religion", "income", "n")
tidy <- melt(raw, id = "religion",variable.name = "income", value.name = "n")
View(tidy)
raw <- read.delim("data/weather.txt",check.names = F, na.strings = ".")
raw <- read.delim("data/weather.txt",check.names = F, na.strings = ".")
View(raw)
# na.rm = TRUE is useful if the missing values don't have any meaning
raw.tidy <- melt(raw,id = c("year", "month", "element"),variable.name = "day", na.rm = TRUE)
# reordering columns
raw <- raw.tidy[, c("year", "month", "day","element", "value")]
head(raw)
tidy <- dcast(raw, year + month + day ~ element,value.var = "value")
head(tidy)
raw <- read.delim("data/weather.txt",check.names = F, na.strings = ".")
View(raw)
# na.rm = TRUE is useful if the missing values don't have any meaning
raw.tidy <- melt(raw,id = c("year", "month", "element"),variable.name = "day", na.rm = TRUE)
raw <- read.delim("data/weather.txt",check.names = F, na.strings = ".")
View(raw)
View(raw.tidy)
# reordering columns
raw <- raw.tidy[, c("year", "month", "day","element", "value")]
head(raw)
# reordering columns
raw <- raw.tidy[, c("year", "month", "day","element", "value")]
tidy <- dcast(raw, year + month + day ~ element,value.var = "value")
tidy
head(tidy)
titanic2 <-read.csv("data/titanic2.csv",stringsAsFactors = FALSE)
head(titanic2)
# 计算不同类别的存活率= 存活人数/（存活人数+ 死亡人数）
#Step 1
tidy <- melt(titanic2, id = c("class", "age", "fate"),variable.name = "gender")
titanic2
tidy
tidy <- dcast(tidy, class + age + gender ~ fate,value.var = "value")
tidy
tidy$rate <- round(tidy$survived /(tidy$survived + tidy$perished), 2)
head(tidy)
View(titanic2)
w<-read.csv("data/Forbes2000.csv")
names(w)
summary(w)
View(w)
w[w[,3]=="China",2]
par(mfrow=c(2,2))
for(i in 4:7)
{
hist(log(w[,i]),main=paste("Log",names(w)[i]),xlab="")
rug(log(w[,i]))
}
}
C<-w[w[,3]=="China",]
G<-w[w[,3]=="Germany",]
par(mfrow=c(1,2))
hist(C$Market.Value,20,main="Histogram of Market Value (China)",col=3,prob=T,ylim=c(0,0.07))
lines(density(C$Market.Value),lwd=2)
hist(G$Market.Value,20,,main="Histogram of Market Value (German)",col=2,prob=T,ylim=c(0,0.07))
lines(density(G$Market.Value),lwd=2)
ans <- anscombe
ans$id <- as.numeric(rownames(anscombe))
ans
d1<-anscombe[,1:4]
d2<-anscombe[,5:8]
ans$id <- as.numeric(rownames(anscombe))
d1
d1<-anscombe[,1:4]
d2<-anscombe[,5:8]
d1$id <- as.numeric(rownames(anscombe))
#绘图
d1
melt(d1,id='id')
View(d1)
d1=melt(d1,id='id')
View(d1)
library(data.table)
?melt
methods(melt)
melt
melt.data.table
